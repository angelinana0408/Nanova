#pragma checksum "C:\workspace\nanovaTest\Code\nanovaTest\nanovaTest\CustomMethod\CustomMethodPage.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "2D8B9AD6D4B540DA01A4DFAC203CCB85"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nanovaTest.CustomMethod
{
    partial class CustomMethodPage : 
        global::Windows.UI.Xaml.Controls.Page, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_DataPointSeries_ItemsSource(global::WinRTXamlToolkit.Controls.DataVisualization.Charting.DataPointSeries obj, global::System.Collections.IEnumerable value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Collections.IEnumerable) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Collections.IEnumerable), targetNullValue);
                }
                obj.ItemsSource = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
        };

        private class CustomMethodPage_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ICustomMethodPage_Bindings
        {
            private global::nanovaTest.CustomMethod.CustomMethodPage dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries obj8;
            private global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries obj12;
            private global::Windows.UI.Xaml.Controls.TextBlock obj16;

            private CustomMethodPage_obj1_BindingsTracking bindingsTracking;

            public CustomMethodPage_obj1_Bindings()
            {
                this.bindingsTracking = new CustomMethodPage_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 8:
                        this.obj8 = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)target;
                        break;
                    case 12:
                        this.obj12 = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LineSeries)target;
                        break;
                    case 16:
                        this.obj16 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    default:
                        break;
                }
            }

            // ICustomMethodPage_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // CustomMethodPage_obj1_Bindings

            public void SetDataRoot(global::nanovaTest.CustomMethod.CustomMethodPage newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::nanovaTest.CustomMethod.CustomMethodPage obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_topDatas(obj.topDatas, phase);
                        this.Update_bottomDatas(obj.bottomDatas, phase);
                        this.Update_Value(obj.Value, phase);
                    }
                }
            }
            private void Update_topDatas(global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_DataPointSeries_ItemsSource(this.obj8, obj, null);
                }
            }
            private void Update_bottomDatas(global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_WinRTXamlToolkit_Controls_DataVisualization_Charting_DataPointSeries_ItemsSource(this.obj12, obj, null);
                }
            }
            private void Update_Value(global::System.Double obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj16, obj.ToString(), null);
                }
            }

            private class CustomMethodPage_obj1_BindingsTracking
            {
                global::System.WeakReference<CustomMethodPage_obj1_Bindings> WeakRefToBindingObj; 

                public CustomMethodPage_obj1_BindingsTracking(CustomMethodPage_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<CustomMethodPage_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void DependencyPropertyChanged_Value(global::Windows.UI.Xaml.DependencyObject sender, global::Windows.UI.Xaml.DependencyProperty prop)
                {
                    CustomMethodPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::nanovaTest.CustomMethod.CustomMethodPage obj = sender as global::nanovaTest.CustomMethod.CustomMethodPage;
        if (obj != null)
        {
            bindings.Update_Value(obj.Value, DATA_CHANGED);
        }
                    }
                }
                private long tokenDPC_Value = 0;
                public void UpdateChildListeners_(global::nanovaTest.CustomMethod.CustomMethodPage obj)
                {
                    CustomMethodPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            bindings.dataRoot.UnregisterPropertyChangedCallback(global::nanovaTest.CustomMethod.CustomMethodPage.ValueProperty, tokenDPC_Value);
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            tokenDPC_Value = obj.RegisterPropertyChangedCallback(global::nanovaTest.CustomMethod.CustomMethodPage.ValueProperty, DependencyPropertyChanged_Value);
                        }
                    }
                }
                public void PropertyChanged_topDatas(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CustomMethodPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_topDatas(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    CustomMethodPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData>;
                    }
                }
                public void PropertyChanged_bottomDatas(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    CustomMethodPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData>;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                        }
                        else
                        {
                            switch (propName)
                            {
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void CollectionChanged_bottomDatas(object sender, global::System.Collections.Specialized.NotifyCollectionChangedEventArgs e)
                {
                    CustomMethodPage_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData> obj = sender as global::System.Collections.ObjectModel.ObservableCollection<global::nanovaTest.CustomMethod.CustomMethodPage.ChartData>;
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 2:
                {
                    global::Windows.UI.Xaml.Controls.Button element2 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 617 "..\..\..\CustomMethod\CustomMethodPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element2).Click += this.Calculation_Click;
                    #line default
                }
                break;
            case 3:
                {
                    this.CalcButtonImage = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 4:
                {
                    this.CalcTestText = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 5:
                {
                    this.BottomLineChart = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)(target);
                }
                break;
            case 6:
                {
                    this.BottomXAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.CategoryAxis)(target);
                }
                break;
            case 7:
                {
                    this.BottomYAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LinearAxis)(target);
                }
                break;
            case 9:
                {
                    this.TopLineChart = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.Chart)(target);
                }
                break;
            case 10:
                {
                    this.TopXAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.CategoryAxis)(target);
                }
                break;
            case 11:
                {
                    this.TopYAxis = (global::WinRTXamlToolkit.Controls.DataVisualization.Charting.LinearAxis)(target);
                }
                break;
            case 13:
                {
                    this.ConfigGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 14:
                {
                    this.StatusGrid = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            case 15:
                {
                    this.Rount = (global::Windows.UI.Xaml.Shapes.Ellipse)(target);
                }
                break;
            case 17:
                {
                    this.EndTimeText4 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 18:
                {
                    this.BeginTimeText4 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 19:
                {
                    this.EndTimeText3 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 20:
                {
                    this.BeginTimeText3 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 21:
                {
                    this.EndTimeText2 = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 22:
                {
                    this.BeginTimeText2 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 23:
                {
                    this.EndTimeText1 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 24:
                {
                    this.BeginTimeText1 = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 25:
                {
                    this.RampSpeedText = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 26:
                {
                    this.LowHoldingTimeText = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 27:
                {
                    this.LowestTempText = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 28:
                {
                    this.HighHoldingTimeText = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 29:
                {
                    this.HighestTempText = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 30:
                {
                    this.WaitTimeText = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 31:
                {
                    this.SamplingTimeText = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 32:
                {
                    this.ExperienceName = (global::Windows.UI.Xaml.Controls.TextBox)(target);
                }
                break;
            case 33:
                {
                    global::Windows.UI.Xaml.Controls.Button element33 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 50 "..\..\..\CustomMethod\CustomMethodPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element33).Click += this.Status_Click;
                    #line default
                }
                break;
            case 34:
                {
                    this.StatusImage = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 35:
                {
                    this.StatusText = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 36:
                {
                    global::Windows.UI.Xaml.Controls.Button element36 = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 42 "..\..\..\CustomMethod\CustomMethodPage.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)element36).Click += this.Config_Click;
                    #line default
                }
                break;
            case 37:
                {
                    this.ConfigImage = (global::Windows.UI.Xaml.Controls.Image)(target);
                }
                break;
            case 38:
                {
                    this.ConfigText = (global::Windows.UI.Xaml.Controls.TextBlock)(target);
                }
                break;
            case 39:
                {
                    this.GridTitleBar = (global::Windows.UI.Xaml.Controls.Grid)(target);
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.Page element1 = (global::Windows.UI.Xaml.Controls.Page)target;
                    CustomMethodPage_obj1_Bindings bindings = new CustomMethodPage_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

